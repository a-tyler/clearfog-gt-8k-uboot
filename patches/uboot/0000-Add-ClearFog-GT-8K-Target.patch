diff --git a/arch/arm/mach-mvebu/Kconfig b/arch/arm/mach-mvebu/Kconfig
index a38762d..675afda 100644
--- a/arch/arm/mach-mvebu/Kconfig
+++ b/arch/arm/mach-mvebu/Kconfig
@@ -72,6 +72,12 @@ config TARGET_CLEARFOG
 	bool "Support ClearFog"
 	select 88F6820
 
+config TARGET_CLEARFOG_GT_8K
+	bool "Support ClearFog GT 8K"
+	select ARMADA_8K
+	select BOARD_LATE_INIT
+	imply SCSI
+
 config TARGET_MVEBU_ARMADA_37XX
 	bool "Support Armada 37xx platforms"
 	select ARMADA_3700
@@ -125,6 +131,7 @@ endchoice
 
 config SYS_BOARD
 	default "clearfog" if TARGET_CLEARFOG
+	default "clearfog-gt-8k" if TARGET_CLEARFOG_GT_8K
 	default "mvebu_armada-37xx" if TARGET_MVEBU_ARMADA_37XX
 	default "db-88f6720" if TARGET_DB_88F6720
 	default "db-88f6820-gp" if TARGET_DB_88F6820_GP
@@ -138,6 +145,7 @@ config SYS_BOARD
 
 config SYS_CONFIG_NAME
 	default "clearfog" if TARGET_CLEARFOG
+	default "clearfog-gt-8k" if TARGET_CLEARFOG_GT_8K
 	default "mvebu_armada-37xx" if TARGET_MVEBU_ARMADA_37XX
 	default "db-88f6720" if TARGET_DB_88F6720
 	default "db-88f6820-gp" if TARGET_DB_88F6820_GP
@@ -157,6 +165,7 @@ config SYS_VENDOR
 	default "Marvell" if TARGET_DB_88F6820_AMC
 	default "Marvell" if TARGET_MVEBU_ARMADA_8K
 	default "solidrun" if TARGET_CLEARFOG
+	default "solidrun" if TARGET_CLEARFOG_GT_8K
 	default "Synology" if TARGET_DS414
 	default "CZ.NIC" if TARGET_TURRIS_OMNIA
 
diff --git a/board/solidrun/clearfog-gt-8k/MAINTAINERS b/board/solidrun/clearfog-gt-8k/MAINTAINERS
new file mode 100644
index 0000000..2551ed0
--- /dev/null
+++ b/board/solidrun/clearfog-gt-8k/MAINTAINERS
@@ -0,0 +1,12 @@
+MVEBU_ARMADA_8K BOARD
+M:	Stefan Roese <sr@denx.de>
+S:	Maintained
+F:	board/Marvell/mvebu_armada-8k/
+F:	include/configs/mvebu_armada-8k.h
+F:	configs/mvebu_db_armada8k_defconfig
+
+
+MACCHIATOBin BOARD
+M:	Konstantin Porotchkin <kostap@marvell.com>
+S:	Maintained
+F:	configs/mvebu_mcbin-88f8040_defconfig
diff --git a/board/solidrun/clearfog-gt-8k/Makefile b/board/solidrun/clearfog-gt-8k/Makefile
new file mode 100644
index 0000000..ed39738
--- /dev/null
+++ b/board/solidrun/clearfog-gt-8k/Makefile
@@ -0,0 +1,7 @@
+#
+# Copyright (C) 2016 Stefan Roese <sr@denx.de>
+#
+# SPDX-License-Identifier:	GPL-2.0+
+#
+
+obj-y	:= board.o
diff --git a/board/solidrun/clearfog-gt-8k/board.c b/board/solidrun/clearfog-gt-8k/board.c
new file mode 100644
index 0000000..6aef04b
--- /dev/null
+++ b/board/solidrun/clearfog-gt-8k/board.c
@@ -0,0 +1,62 @@
+/*
+ * Copyright (C) 2016 Stefan Roese <sr@denx.de>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <i2c.h>
+#include <asm/io.h>
+#include <asm/arch/cpu.h>
+#include <asm/arch/soc.h>
+#include <power/regulator.h>
+#ifdef CONFIG_BOARD_CONFIG_EEPROM
+#include <mvebu/cfg_eeprom.h>
+#endif
+
+DECLARE_GLOBAL_DATA_PTR;
+
+int __soc_early_init_f(void)
+{
+	return 0;
+}
+
+int soc_early_init_f(void)
+			__attribute__((weak, alias("__soc_early_init_f")));
+
+int board_early_init_f(void)
+{
+	soc_early_init_f();
+
+	return 0;
+}
+
+int board_early_init_r(void)
+{
+#ifdef CONFIG_DM_REGULATOR
+	/* Check if any existing regulator should be turned down */
+	regulators_enable_boot_off(false);
+#endif
+
+	return 0;
+}
+
+int board_init(void)
+{
+	/* adress of boot parameters */
+	gd->bd->bi_boot_params = CONFIG_SYS_SDRAM_BASE + 0x100;
+
+#ifdef CONFIG_BOARD_CONFIG_EEPROM
+	cfg_eeprom_init();
+#endif
+
+	return 0;
+}
+
+int board_late_init(void)
+{
+	/* Pre-configure the USB ports (overcurrent, VBus) */
+
+	return 0;
+}
diff --git a/include/configs/clearfog-gt-8k.h b/include/configs/clearfog-gt-8k.h
new file mode 100644
index 0000000..7ce32b3
--- /dev/null
+++ b/include/configs/clearfog-gt-8k.h
@@ -0,0 +1,31 @@
+/*
+ * Copyright (C) 2016 Stefan Roese <sr@denx.de>
+ *
+ * SPDX-License-Identifier:	GPL-2.0+
+ */
+
+#ifndef _CONFIG_MVEBU_ARMADA_8K_H
+#define _CONFIG_MVEBU_ARMADA_8K_H
+
+#define CONFIG_DEFAULT_CONSOLE		"console=ttyS0,115200 "\
+					"earlycon=uart8250,mmio32,0xf0512000"
+
+#include <configs/mvebu_armada-common.h>
+
+/*
+ * High Level Configuration Options (easy to change)
+ */
+#define CONFIG_SYS_TCLK		250000000	/* 250MHz */
+
+#define CONFIG_NR_DRAM_BANKS	2
+
+#define CONFIG_BOARD_EARLY_INIT_R
+
+#define CONFIG_SYS_MAX_NAND_DEVICE	1
+#define CONFIG_SYS_NAND_MAX_CHIPS	1
+#define CONFIG_SYS_NAND_ONFI_DETECTION
+#define CONFIG_SYS_NAND_USE_FLASH_BBT
+
+#define CONFIG_USB_MAX_CONTROLLER_COUNT (3 + 3)
+
+#endif /* _CONFIG_MVEBU_ARMADA_8K_H */
diff --git a/include/configs/clearfog-gt-8k.h b/include/configs/clearfog-gt-8k.h
index 7ce32b3..b2a2369 100644
--- a/include/configs/clearfog-gt-8k.h
+++ b/include/configs/clearfog-gt-8k.h
@@ -10,6 +10,24 @@
 #define CONFIG_DEFAULT_CONSOLE		"console=ttyS0,115200 "\
 					"earlycon=uart8250,mmio32,0xf0512000"
 
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	"fdtfile=" CONFIG_DEFAULT_DEVICE_TREE ".dtb\0" \
+	"run_checkreset=gpio input 126 && run run_rescue\0" \
+	"servername=plik.root.gg\0" \
+	"filename=/file/WVkO3YZ5WtOQwTmd/4NBXPqzX3uzR1iyp/latest.img.gz\0" \
+	"run_leds_flash=led green:led0 on; led green:led1 on; sleep $led_period; led green:led0 off; led green:led1 off\0" \
+	"run_led0_flash=led green:led0 on; sleep $led_period; led green:led0 off\0" \
+	"run_led1_flash=led green:led1 on; sleep $led_period; led green:led1 off\0" \
+	"run_led_rescue_lease=set led_period 0.2; run run_led0_flash; sleep 0.5; run run_leds_flash;\0" \
+	"run_led_rescue_resolv=led green:led0 on; led green:led1 off && sleep 1\0" \
+	"run_led_rescue_start=set led_period 0.2; run run_leds_flash; sleep 0.5; run run_leds_flash;\0" \
+	"run_led_rescue_wget=led green:led0 on; led green:led1 off\0" \
+	"run_led_rescue_write=led green:led0 on; led green:led1 on\0" \
+	"run_led_rescue_writeimg=led green:led0 off; led green:led1 on\0" \
+	"run_wgetimg=run run_led_rescue_resolv && dns $servername serverip && setenv serverip $serverip && run run_led_rescue_wget && wget $filename\0" \
+	"run_writeimg=run run_led_rescue_writeimg && gzwrite mmc 0 $loadaddr $filesize; led green:led0 on; led green:led1 on; sleep 2; reset\0" \
+	"run_rescue=run run_led_rescue_start; set autoload no; dhcp && run run_led_rescue_lease && run run_wgetimg && run run_led_rescue_wget && run run_writeimg; run run_rescue\0"
+
 #include <configs/mvebu_armada-common.h>
 
 /*
diff --git a/include/configs/mvebu_armada-common.h b/include/configs/mvebu_armada-common.h
index cc8b99d..c212b94 100644
--- a/include/configs/mvebu_armada-common.h
+++ b/include/configs/mvebu_armada-common.h
@@ -34,6 +34,7 @@
 #define CONFIG_ETHPRIME			"eth0"
 #define CONFIG_ROOTPATH                 "/srv/nfs/" /* Default Dir for NFS */
 #define CONFIG_ENV_OVERWRITE		/* ethaddr can be reprogrammed */
+#ifndef CONFIG_EXTRA_ENV_SETTINGS
 #define CONFIG_EXTRA_ENV_SETTINGS	"bootcmd=run get_images; " \
 						"run set_bootargs; " \
 						"booti $kernel_addr_r " \
@@ -75,6 +76,7 @@
 						"$serverip:$rootpath " \
 						"$extra_params " \
 						"$cpuidle"
+#endif
 /*
  * For booting Linux, the board info and command line data
  * have to be in the first 8 MB of memory, since this is
diff --git a/include/configs/clearfog-gt-8k.h b/include/configs/clearfog-gt-8k.h
index b2a2369..ad6104f 100644
--- a/include/configs/clearfog-gt-8k.h
+++ b/include/configs/clearfog-gt-8k.h
@@ -10,23 +10,61 @@
 #define CONFIG_DEFAULT_CONSOLE		"console=ttyS0,115200 "\
 					"earlycon=uart8250,mmio32,0xf0512000"
 
-#define CONFIG_EXTRA_ENV_SETTINGS \
-	"fdtfile=" CONFIG_DEFAULT_DEVICE_TREE ".dtb\0" \
-	"run_checkreset=gpio input 126 && run run_rescue\0" \
-	"servername=plik.root.gg\0" \
-	"filename=/file/WVkO3YZ5WtOQwTmd/4NBXPqzX3uzR1iyp/latest.img.gz\0" \
-	"run_leds_flash=led green:led0 on; led green:led1 on; sleep $led_period; led green:led0 off; led green:led1 off\0" \
-	"run_led0_flash=led green:led0 on; sleep $led_period; led green:led0 off\0" \
-	"run_led1_flash=led green:led1 on; sleep $led_period; led green:led1 off\0" \
-	"run_led_rescue_lease=set led_period 0.2; run run_led0_flash; sleep 0.5; run run_leds_flash;\0" \
-	"run_led_rescue_resolv=led green:led0 on; led green:led1 off && sleep 1\0" \
-	"run_led_rescue_start=set led_period 0.2; run run_leds_flash; sleep 0.5; run run_leds_flash;\0" \
-	"run_led_rescue_wget=led green:led0 on; led green:led1 off\0" \
-	"run_led_rescue_write=led green:led0 on; led green:led1 on\0" \
-	"run_led_rescue_writeimg=led green:led0 off; led green:led1 on\0" \
-	"run_wgetimg=run run_led_rescue_resolv && dns $servername serverip && setenv serverip $serverip && run run_led_rescue_wget && wget $filename\0" \
-	"run_writeimg=run run_led_rescue_writeimg && gzwrite mmc 0 $loadaddr $filesize; led green:led0 on; led green:led1 on; sleep 2; reset\0" \
-	"run_rescue=run run_led_rescue_start; set autoload no; dhcp && run run_led_rescue_lease && run run_wgetimg && run run_led_rescue_wget && run run_writeimg; run run_rescue\0"
+#define CONFIG_EXTRA_ENV_SETTINGS	"bootcmd=run run_checkreset; "\
+						"run get_images && " \
+						"run set_bootargs && " \
+						"booti $kernel_addr_r " \
+						"- " \
+						"$fdt_addr_r;" \
+						"run run_rescue\0" \
+					"kernel_addr_r=0x7000000\0"	\
+					"fdt_addr_r=0x6f00000\0"	\
+					"fdt_name=" CONFIG_DEFAULT_DEVICE_TREE ".dtb\0"		\
+					"get_images=ext4load mmc 0 $kernel_addr_r $image_name && ext4load mmc 0 $fdt_addr_r $fdt_name\0" \
+					"root=root=/dev/mmcblk0p2 ro rootwait\0" \
+					"console=" CONFIG_DEFAULT_CONSOLE "\0"\
+					"set_bootargs=setenv bootargs $console"\
+						" $root " \
+						"$extra_params " \
+						"$cpuidle\0" \
+					"extra_params=pci=pcie_bus_safe\0" \
+					"run_rescue=run run_led_rescue_start; set autoload no; dhcp && run run_led_rescue_lease && run run_wgetimg && run run_led_rescue_wget && run run_writeimg; run run_rescue\0" \
+					"run_checkreset=gpio input 126 && run run_rescue\0" \
+					"servername=downloads.overthebox.net\0" \
+					"filename=/prod/targets/mvebu/cortexa72/solidrun-gt-8k/latest.img.gz\0" \
+					"run_wgetimg=run run_led_rescue_resolv && dns $servername serverip && setenv serverip $serverip && run run_led_rescue_wget && wget $filename\0" \
+					"run_writeimg=run run_led_rescue_writeimg && gzwrite mmc 0 $loadaddr $filesize; led green:led0 on; led green:led1 on; sleep 2; reset\0" \
+					"initrd_addr=0xa00000\0"	\
+					"initrd_size=0x2000000\0"	\
+					"loadaddr=0x6000000\0"		\
+					"fdt_high=0xffffffffffffffff\0"	\
+					"hostname=OverTheBox\0"		\
+					"ramdisk_addr_r=0x8000000\0"	\
+					"ramfs_name=-\0"		\
+					"netdev=eth0\0"			\
+					"ethaddr=00:51:82:11:22:00\0"	\
+					"eth1addr=00:51:82:11:22:01\0"	\
+					"eth2addr=00:51:82:11:22:02\0"	\
+					"eth3addr=00:51:82:11:22:03\0"	\
+					"image_name=Image\0"		\
+					"get_ramfs=if test \"${ramfs_name}\"" \
+						" != \"-\"; then setenv " \
+						"ramdisk_addr_r 0x8000000; " \
+						"tftpboot $ramdisk_addr_r " \
+						"$ramfs_name; else setenv " \
+						"ramdisk_addr_r -;fi\0"	\
+						"$image_name; tftpboot " \
+						"$fdt_addr_r $fdt_name; " \
+						"run get_ramfs\0"	\
+					"run_leds_flash=led green:led0 on; led green:led1 on; sleep $led_period; led green:led0 off; led green:led1 off\0" \
+					"run_led0_flash=led green:led0 on; sleep $led_period; led green:led0 off\0" \
+					"run_led1_flash=led green:led1 on; sleep $led_period; led green:led1 off\0" \
+					"run_led_rescue_lease=set led_period 0.2; run run_led0_flash; sleep 0.5; run run_leds_flash;\0" \
+					"run_led_rescue_resolv=led green:led0 on; led green:led1 off && sleep 1\0" \
+					"run_led_rescue_start=set led_period 0.2; run run_leds_flash; sleep 0.5; run run_leds_flash;\0" \
+					"run_led_rescue_wget=led green:led0 on; led green:led1 off\0" \
+					"run_led_rescue_write=led green:led0 on; led green:led1 on\0" \
+					"run_led_rescue_writeimg=led green:led0 off; led green:led1 on\0"
 
 #include <configs/mvebu_armada-common.h>
 
